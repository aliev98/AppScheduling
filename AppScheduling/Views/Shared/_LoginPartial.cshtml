@inject Microsoft.AspNetCore.Identity.SignInManager<AppScheduling.Models.ApplicationUser> signInManager

@if (signInManager.IsSignedIn(User))
{
    <form method="post" id="logoutForm" asp-action="LogOff" asp-controller="Account">
        <ul class="nav navbar-nav">
            <li class="nav-link text-white" > Hello, @User.Identity.Name!</li>
            <li ><a class="nav-link text-white" href="javascript: document.getElementById('logoutForm').submit()">Log out</a></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav font-weight-bold ">
        @*<li>@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@

        <li class="nav-item">
            <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-white" id="loginLink" asp-controller="Account" asp-action="Login">Login</a>
        </li>

        @*<li>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>*@
    </ul>
} 